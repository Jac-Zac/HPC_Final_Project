#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks=8                 # maximum MPI ranks you plan to use
#SBATCH --cpus-per-task=8          # threads per rank (OpenMP)
#SBATCH --mem=0
#SBATCH --partition=GENOA
#SBATCH -t 00:02:00
#SBATCH --exclusive
#SBATCH --job-name=stencil_scaling

EXEC=./stencil_parallel
ARGS="-x 10000 -y 10000 -n 100 -o 0"

module load openMPI/5.0.5

# Compile
make MODE=parallel LOG=0

# OpenMP settings
export OMP_PLACES=cores
export OMP_PROC_BIND=close

# Max MPI ranks and threads per rank from Slurm
MAX_TASKS=${SLURM_NTASKS:-8}                # fallback if variable not set
THREADS_PER_TASK=${SLURM_CPUS_PER_TASK:-8}
export OMP_NUM_THREADS=$THREADS_PER_TASK

# Output file
RESULTS_FILE=mpi_scaling.txt
echo "Tasks,TotalTime,MaxCompTime,MaxCommTime,EnergyCompTime" > $RESULTS_FILE

# Automatic scaling loop: 1 to MAX_TASKS
for ((TASKS=1; TASKS<=MAX_TASKS; TASKS*=2))
do
    echo ">>> Running with $TASKS MPI tasks"
    OUTPUT=$(mktemp)

    # Run MPI + OpenMP
    mpirun -np $TASKS --map-by ppr:$TASKS:node:pe=$THREADS_PER_TASK $EXEC $ARGS > $OUTPUT

    # Extract metrics from output
    TOTAL_TIME=$(grep "Total time" $OUTPUT | awk '{print $3}')
    MAX_COMP=$(grep "Max computation time" $OUTPUT | awk '{print $6}')
    MAX_COMM=$(grep "Max communication time" $OUTPUT | awk '{print $6}')
    ENERGY_TIME=$(grep "Total energy computaton time" $OUTPUT | awk '{print $5}')

    # Append to CSV
    echo "$TASKS,$TOTAL_TIME,$MAX_COMP,$MAX_COMM,$ENERGY_TIME" >> $RESULTS_FILE

    rm $OUTPUT
done
