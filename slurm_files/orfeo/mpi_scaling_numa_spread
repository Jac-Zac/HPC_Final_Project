#!/bin/bash
#SBATCH --job-name=stencil_mpi_scaling
#SBATCH --partition=GENOA
#SBATCH --mem=0G
#SBATCH --exclusive
#SBATCH --time=00:10:00
#SBATCH --ntasks-per-node=2
#SBATCH --cpus-per-task=8
#SBATCH --array=0-1      # 6 jobs: index 0..5
##SBATCH --array=0-5      # 6 jobs: index 0..5

# Node counts you want to test
# NODE_COUNTS=(1 2 4 8 16 32)
NODE_COUNTS=(1 2)
NODES=${NODE_COUNTS[$SLURM_ARRAY_TASK_ID]}
#SBATCH --nodes=${NODES}

# --- Config ---
EXEC=./stencil_parallel
ARGS="-x 25000 -y 25000 -n 100 -o 0"
RESULTS_FILE="mpi_scaling_${NODES}nodes.txt"

module load openMPI/5.0.5
make MODE=parallel

export OMP_NUM_THREADS=${SLURM_CPUS_PER_TASK}
export OMP_PLACES=cores
export OMP_PROC_BIND=spread

TASKS=$((NODES * 2))  # 2 MPI tasks per node

echo ">>> Running on $NODES node(s), $TASKS MPI tasks, ${OMP_NUM_THREADS} threads/task"

OUTPUT=$(mktemp)

mpirun -np $TASKS \
       --map-by ppr:2:node \
       --bind-to core \
       --display-map \
       --report-bindings \
       $EXEC $ARGS > $OUTPUT

TOTAL_TIME=$(grep "Total time" $OUTPUT | awk '{print $3}')
MAX_COMP=$(grep "Max computation time" $OUTPUT | awk '{print $6}')
MAX_COMM=$(grep "Max communication time" $OUTPUT | awk '{print $6}')
ENERGY_TIME=$(grep "Total energy computaton time" $OUTPUT | awk '{print $5}')

if [ -n "$TOTAL_TIME" ]; then
    echo "Tasks,TotalTime,MaxCompTime,MaxCommTime,EnergyCompTime" > $RESULTS_FILE
    echo "$TASKS,$TOTAL_TIME,$MAX_COMP,$MAX_COMM,$ENERGY_TIME" >> $RESULTS_FILE
    echo "Results saved to $RESULTS_FILE"
else
    echo "Error parsing output for $TASKS tasks. See $OUTPUT"
fi
