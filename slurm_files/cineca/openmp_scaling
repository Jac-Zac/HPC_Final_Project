#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks=1                 # only 1 MPI rank
#SBATCH --cpus-per-task=112        # reserve all cores, up to 112 OMP threads
#SBATCH --mem=0
#SBATCH --partition=dcgp_usr_prod
#SBATCH -A uTS25_Tornator_0
#SBATCH -t 00:30:00
#SBATCH --exclusive
#SBATCH --job-name=stencil_scaling_openmp

EXEC=./stencil_parallel
ARGS="-x 25000 -y 25000 -n 1000 -o 0"

RESULTS_FILE=openmp_scaling_cineca.log
echo "Threads,TotalTime,MaxCompTime,MaxCommTime,EnergyCompTime" > $RESULTS_FILE

# Load module
module load openmpi/4.1.6--gcc--12.2.0

# Compile OpenMP version
make MODE=parallel LOG=0

# Loop over thread counts
for THREADS in 1 2 4 8 16 32 56 84 112
do
    echo ">>> Running with $THREADS OpenMP threads"

    # Set OpenMP environment variables
    export OMP_NUM_THREADS=$THREADS
    export OMP_PLACES=cores
    export OMP_PROC_BIND=spread
    export OMP_DISPLAY_AFFINITY=TRUE

    # Log CPU layout only once
    if [ "$THREADS" -eq 1 ]; then
        lscpu > cpu_layout.log
    fi

    OUTPUT=$(mktemp)

    # Avoid mpi binding
    mpirun -np 1 --display-map --display-allocation --report-bindings --bind-to none $EXEC $ARGS > $OUTPUT

    # Extract values
    TOTAL_TIME=$(grep "Total time" $OUTPUT | awk '{print $3}')
    MAX_COMP=$(grep "Max computation time" $OUTPUT | awk '{print $6}')
    MAX_COMM=$(grep "Max communication time" $OUTPUT | awk '{print $6}')
    ENERGY_TIME=$(grep "Total energy computaton time" $OUTPUT | awk '{print $5}')

    echo "$THREADS,$TOTAL_TIME,$MAX_COMP,$MAX_COMM,$ENERGY_TIME" >> $RESULTS_FILE
    rm $OUTPUT
done
